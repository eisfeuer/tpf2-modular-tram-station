local Position = require('modutram_position')
local Matrix = require('modutram_matrix')

function data()
    return {
        cost = {
            price = 20000,
        },
        category = {
            categories = { "tracks", },
        },
        description = {
            name = _("Track single down"),
            description = _("Platform for waiting passengers."),
            icon = "ui/construction/station/street/platform_passenger_era_a.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        type = "eisfeuer_modutram_track_down_doors_right",
        order = {
            value = 7,
        },
        metadata = {
            passenger = true,
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            result.station.slots:make_asset_slot(slotId, 1, transform):catenary():move(0, 0, 1):add_to_slots()

            result.station.builder:add_vehicle_and_platform_lanes_for('tram_not_electric', slotId, -1)
            result.station.builder:add_segment_models_for_tram_track(slotId, {{
                id = 'modutram_track_single_rep_era_c.mdl',
                transf = {
                    1, 0, 0, 0,
                    0, 1, 0, 0,
                    0, 0, 1, 0,
                    0, 0, 0, 1,
                }
            }})

            if result.station:planning_mode_is_active() then
                local arrow_down_position = Position:new{x = 0, y = 0, z = 0.05}:add_to_matrix(Matrix.rotate_around_z_axis(180, transform))
                result.station.builder:add_model({
                    id = 'icons/modutram_arrow.mdl',
                    transf = arrow_down_position
                })
            end
        end,
        getModelsFn = function()
            return {{
                id = 'modutram_track_single_rep_era_c.mdl',
                transf = {
                    1, 0, 0, 0,
                    0, 1, 0, 0,
                    0, 0, 1, 0,
                    0, 0, 0, 1,
                }
            }}
        end
    }
end