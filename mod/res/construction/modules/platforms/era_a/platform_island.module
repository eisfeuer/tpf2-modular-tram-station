local makeGroundFaceFromGridModule = require("modutram.utils.makeGroundFaceFromGridModule")
local makeLot = require("modutram.utils.makeLot")
local transf = require("transf")
local makeCollider = require("modutram.utils.makaCollider")

function data()
    return {
        cost = {
            price = 50000,
        },
        category = {
            categories = { "Platforms - Island", },
        },
        description = {
            name = _("module_platform_double_name"),
            description = _("era_a"),
            icon = "ui/construction/modules/modular_tram_station/platform_island_era_a.tga"
        }, 
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        type = "modutram_platform_island_550cm",
        order = {
            value = 999990411,
        },
        metadata = {
            modutram = {
                themes = { "era_a" },
                themeType = "platform_island",
            },
        },
        updateFn = function(result, transform, tag, slotId, addModelFn, params)
            local module = result.modutram:getModule(slotId)

            -- Shelters
            module:addAssetSlot(result, 1, "modutram_asset_shelter", transf.mul(transform, transf.rotZTransl(math.pi, {x = 0.9, y = 0, z = 2.15})))
            module:addAssetSlot(result, 3, "modutram_asset_shelter", transf.mul(transform, transf.transl({x = -0.9, y = 0, z = 2.15})))

            if module:hasNeighborTop() and module:getNeighborTop():getOption('isRegularPlatform', true) then
                module:addAssetSlot(result, 2, "modutram_asset_shelter", transf.mul(transform, transf.rotZTransl(math.pi, {x = 0.9, y = 9, z = 2.15})))
                module:addAssetSlot(result, 4, "modutram_asset_shelter", transf.mul(transform, transf.transl({x = -0.9, y = 9, z = 2.15})))
            end

            -- Lamps
            module:addAssetSlot(result, 5, "modutram_asset_lighting", transf.mul(transform, transf.transl({x = 0.0, y = 0, z = 3.15})))
            -- General Platform addAssetSlot
            module:addAssetSlot(result, 7, "modutram_asset", transf.mul(transform, transf.rotZTransl(math.pi, {x = 0.0, y = -4.5, z = 1.15})))
            module:addAssetSlot(result, 8, "modutram_asset", transf.mul(transform, transf.rotZTransl(math.pi, {x = 0.0, y = 4.5, z = 1.15})))
            -- Signs
            module:addAssetSlot(result, 9, "modutram_asset_sign", transf.mul(transform, transf.transl({x = 0.0, y = -7.5, z = 2.15})))
            module:addAssetSlot(result, 10, "modutram_asset_sign", transf.mul(transform, transf.transl({x = 0.0, y = -4.5, z = 2.15})))
            module:addAssetSlot(result, 11, "modutram_asset_sign", transf.mul(transform, transf.transl({x = 0.0, y = -1.5, z = 2.15})))
            module:addAssetSlot(result, 12, "modutram_asset_sign", transf.mul(transform, transf.transl({x = 0.0, y = 1.5, z = 2.15})))
            module:addAssetSlot(result, 13, "modutram_asset_sign", transf.mul(transform, transf.transl({x = 0.0, y = 4.5, z = 2.15})))
            module:addAssetSlot(result, 14, "modutram_asset_sign", transf.mul(transform, transf.transl({x = 0.0, y = 7.5, z = 2.15})))
            -- Station name singns
            module:addAssetSlot(result, 15, "modutram_asset_station_name_sign", transf.mul(transform, transf.transl({x = 0, y = -4.5, z = 3.15})))
            module:addAssetSlot(result, 16, "modutram_asset_station_name_sign", transf.mul(transform, transf.transl({x = 0, y = 4.5, z = 3.15})))

            local groundFace = makeGroundFaceFromGridModule(module, transform)
            makeLot(result, groundFace)
            makeCollider(result, module)

            addModelFn("station/tram/modular_tram_station/platform_double_rep_era_a.mdl")

            if not module:getNeighborTop():isPlatform() then
                addModelFn("station/tram/modular_tram_station/platform_double_era_a_noaccess.mdl", transf.transl({x = 0, y = module.config.gridModuleLength / 2, z = 0}))
            end

            if not module:getNeighborBottom():isPlatform() then
                addModelFn("station/tram/modular_tram_station/platform_double_era_a_noaccess.mdl", transf.rotZTransl(math.pi, {x = 0, y = -module.config.gridModuleLength / 2, z = 0}))
            end

            local hasTerminalLeft = false
            local hasTerminalRight = false

            module:handleTerminals(function (terminalGroup)
                if terminalGroup.trackDirection == 'left' and not hasTerminalLeft then
                    terminalGroup:addTerminalModel(
                        'station/tram/modular_tram_station/path/passenger_terminal.mdl',
                        transf.mul(transform, transf.transl({x = -1.5, y = 0, z = 0}))
                    )
                    hasTerminalLeft = true
                elseif not hasTerminalRight then
                    terminalGroup:addTerminalModel(
                        'station/tram/modular_tram_station/path/passenger_terminal.mdl',
                        transf.mul(transform, transf.rotZTransl(math.pi, {x = 1.5, y = 0, z = 0}))
                    )
                    hasTerminalRight = true
                end
            end)

            module:handleLanes(function ()
                if not hasTerminalLeft then
                    addModelFn(
                        'station/tram/modular_tram_station/path/passenger_lane.mdl',
                        transf.scaleXYZRotZTransl({x = 0, y = module.config.gridModuleLength, z = 0}, 0, {x = -1.5, y = -module.config.gridModuleLength / 2, z = 0})
                    )
                end

                if not hasTerminalRight then
                    addModelFn(
                        'station/tram/modular_tram_station/path/passenger_lane.mdl',
                        transf.scaleXYZRotZTransl({x = 0, y = -module.config.gridModuleLength, z = 0}, 0, {x = 1.5, y = module.config.gridModuleLength / 2, z = 0})
                    )
                end
            end)
        end,
        getModelsFn = function()
            return {{
                id = "station/tram/modular_tram_station/platform_double_rep_era_a.mdl",
                transf = transf.rotZTransl(0, {x = 0, y = 0, z = 0})
            }, {
                id = "station/tram/modular_tram_station/platform_double_era_a_noaccess.mdl",
                transf = transf.rotZTransl(math.pi, {x = 0, y = -9, z = 0})
            }, {
                id = "station/tram/modular_tram_station/platform_double_era_a_noaccess.mdl",
                transf = transf.rotZTransl(0, {x = 0, y = 9, z = 0})
            }}
        end
    }
end