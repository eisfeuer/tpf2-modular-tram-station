local Station = require('modutram_station')
local Blueprint = require('modutram_station_blueprint')
local t = require('modutram_types')

local function get_station_base_modules(params)
    return {
        platform_left = 'modules/platform_single_right_era_c.module',
        platform_right = 'modules/platform_single_left_era_c.module',
        platform_double = 'modules/platform_double_era_c.module',
        track_up_doors_right = 'modules/track_single_up_doors_right_era_c.module',
        track_down_doors_right = 'modules/track_single_down_doors_right_era_c.module',
        track_double_doors_right = 'modules/track_single_double_doors_right_era_c.module'
    }
end

function data()
    return { 
        type = 'STREET_STATION',
        description = {
            name = _('Modular Tram Station'),			
            description = _('Base Set.')
        },
        availability = {
            yearFrom = 0,
            yearTo = 0
        },
        constructionTemplates = {
            {
                type = 'DYNAMIC',
                constructionType = 'STREET_STATION',
                availability = {
                    yearFrom = 0,
                    yearTo = 0
                },
                description = {
                    name = _('Modular Tram Station'),
                    description = _('Base Set.'),
                    icon = 'ui/construction/station/street/passenger_era_a.tga'
                },
                data = {
                    params = {
                        {
                            key = 'modutram_platform_placing_pattern',
                            name = _('modutram_platform_placing_pattern'),
                            values = { _('0'), _('1'), _('2'), _('3'), _('4') },
                            defaultIndex = 0,
                        },
                        {
                            key = 'modutram_platforms_left',
                            name = _('modutram_platforms_left'),
                            values = { _('0'), _('1'), _('2'), _('3'), ('4'), _('5') },
                            defaultIndex = 1,
                        },
                        {
                            key = 'modutram_platforms_right',
                            name = _('modutram_platforms_right'),
                            values = { _('0'), _('1'), _('2'), _('3'), ('4'), _('5') },
                            defaultIndex = 1,
                        },
                        {
                            key = 'modutram_platform_length',
                            name = _('modutram_platform_length'),
                            values = { _('18m'), _('36m'), _('54m'), _('72m'), _('90m') },
                            defaultIndex = 2,
                        },
                        {
                            key = 'modutram_fences',
                            name = _('modutram_lamps'),
                            values = { _('off'), _('era_a'), _('era_b'), _('era_c') },
                            defaultIndex = 3,
                        },
                        {
                            key = 'modutram_lamps',
                            name = _('modutram_lamps'),
                            values = { _('off'), _('era_a'), _('era_b'), _('era_c') },
                            defaultIndex = 3,
                        },
                        {
                            key = 'modutram_benches',
                            name = _('modutram_benches'),
                            values = { _('off'), _('era_a'), _('era_b'), _('era_c') },
                            defaultIndex = 3,
                        },
                    }
                }
            }
        },
        createTemplateFn = function(params)
            local blueprint = Blueprint:new{
                platform_placing_pattern = params.modutram_platform_placing_pattern,
                modules = get_station_base_modules(params),
                platforms_left = params.modutram_platforms_left,
                platforms_right = params.modutram_platforms_right,
                segments_per_platform = params.modutram_platform_length + 1
            }

            blueprint:decorate_platforms(function(segment_blueprint)
                -- Fences
                if params.modutram_fences > 0 then
                    local fence_modules = {
                        'modules/assets/fence_6m_era_a.module',
                        'modules/assets/fence_6m_era_b.module',
                        'modules/assets/fence_6m_era_c.module'
                    }

                    segment_blueprint:add_asset(1, t.ASSET_FENCE_6M, fence_modules[params.modutram_fences])
                    segment_blueprint:add_asset(2, t.ASSET_FENCE_6M, fence_modules[params.modutram_fences])
                    segment_blueprint:add_asset(3, t.ASSET_FENCE_6M, fence_modules[params.modutram_fences])
                end

                -- Lamps
                if params.modutram_lamps > 0 then
                    local lamp_modules = {
                        'modules/assets/lamp_era_a.module',
                        'modules/assets/lamp_era_b.module',
                        segment_blueprint:is_platform_type(t.PLATFORM_DOUBLE) and 'modules/assets/lamp_era_c_double.module' or 'modules/assets/lamp_era_c.module'
                    }

                    segment_blueprint:add_asset(1, t.ASSET_DECORATION, lamp_modules[params.modutram_lamps])
                    segment_blueprint:add_asset(2, t.ASSET_DECORATION, lamp_modules[params.modutram_lamps])
                    if segment_blueprint:is_top_platform_segment() then
                        segment_blueprint:add_asset(3, t.ASSET_DECORATION, lamp_modules[params.modutram_lamps])
                    end
                end

                -- Benches
                if params.modutram_benches > 0 then
                    local bench_modules = {
                        'modules/assets/bench_era_a.module',
                        'modules/assets/bench_era_b.module',
                        'modules/assets/bench_era_b.module'
                    }

                    if segment_blueprint:get_current_segment() < 0 then
                        segment_blueprint:add_asset(6, t.ASSET_DECORATION, bench_modules[params.modutram_benches])
                        segment_blueprint:add_asset(7, t.ASSET_DECORATION, bench_modules[params.modutram_benches])
                    elseif segment_blueprint:get_current_segment() > (segment_blueprint:get_total_segment_count() + 1) % 2 then
                        segment_blueprint:add_asset(4, t.ASSET_DECORATION, bench_modules[params.modutram_benches])
                        segment_blueprint:add_asset(5, t.ASSET_DECORATION, bench_modules[params.modutram_benches])
                    end
                end
            end)

            return blueprint:create_template()
        end,
        updateFn = function(params)
            local station = Station:new({}, params.modules or {})
            return station:get_data()
        end
    }    
end
    